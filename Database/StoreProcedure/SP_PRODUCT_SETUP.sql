IF OBJECT_ID('SP_PRODUCT_SETUP') IS NOT NULL
DROP PROCEDURE SP_PRODUCT_SETUP
GO
CREATE PROCEDURE SP_PRODUCT_SETUP
	@FLAG CHAR,
	@ID INT=NULL,
	@NAME NVARCHAR(100)=NULL,
	@ORIGINALPRICE Decimal(18,2)=NULL,
	@SELLPRICE Decimal(18,2)=NULL,
	@DISCOUNTPRICE Decimal(18,2)=NULL,
	@KEYFEATURES NVARCHAR(100)=NULL,
	@DESCRIPTION NVARCHAR(100)=NULL,
	@CATEGORY INT=NULL,
	@MEASUREMENTID INT=NULL,
	@MeasurementTypeQuantity INT=NULL,
	@EXPIRYDATE DATE=NULL,
	@ICON NVARCHAR(400)=NULL,
	@ISACTIVE BIT=0,
	@UserID NVARCHAR(1000)=NULL
AS
BEGIN
	DECLARE @MSG NVARCHAR(MAX)
	IF @FLAG='S'-----for gridshow
	BEGIN
		SELECT P.ID,P.NAME,P.ORIGINALPRICE,P.SellPrice,P.Discount,M.Name MeasurementType,P.MeasurementTypeID,P.MeasurementTypeQuantity,
			P.KeyFeatures,P.Icon, CONVERT(NVARCHAR, P.ExpiryDate, 103) ExpiryDate,P.Descriptions,CONVERT(NVARCHAR, P.CreatedDate, 103) CreatedDate,P.CreatedBy,
			C.Name Category, P.CategoryID,p.Active
		FROM  Products P WITH(NOLOCK)
		LEFT JOIN Category C WITH(NOLOCK) ON P.CategoryID=C.ID
		LEFT JOIN MeasurementType M WITH(NOLOCK) ON M.ID=P.MeasurementTypeID
	END
	IF @FLAG='D'------FOR DELETE DATA
	BEGIN
	BEGIN TRY
		BEGIN TRAN
			DELETE FROM Products WHERE ID = @ID 
		COMMIT TRAN
		SELECT 'RECORD DELETE SUCCESSFULLY.' MSG
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN 
		SET @MSG= CONCAT('Log Line: ', CAST(SCOPE_IDENTITY() AS NVARCHAR(10)), ', Error Line: ' , CAST(ERROR_LINE() AS NVARCHAR(10)), ', MSG: ', ERROR_MESSAGE())
		;THROW 51002, @MSG, 1;
		RETURN
	END CATCH
	END
	IF @FLAG='U'-----FOR UPDATE
	BEGIN
	BEGIN TRY
		BEGIN TRAN
			UPDATE Products
			SET NAME=@NAME,
			ORIGINALPRICE=@ORIGINALPRICE,
			SellPrice=@SELLPRICE,
			Discount=@DISCOUNTPRICE,
			MeasurementTypeID=@MEASUREMENTID,
			MeasurementTypeQuantity=@MeasurementTypeQuantity,
			KeyFeatures=@KEYFEATURES,
			Icon=@ICON,
			ExpiryDate=@EXPIRYDATE,
			Descriptions=@DESCRIPTION,
			CategoryID=@CATEGORY,
			Active=@ISACTIVE
			WHERE ID=@ID
		COMMIT TRAN
		SELECT 'RECORD UPDATED SUCCESSFULLY.' MSG
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN 
		SET @MSG= CONCAT('Log Line: ', CAST(SCOPE_IDENTITY() AS NVARCHAR(10)), ', Error Line: ' , CAST(ERROR_LINE() AS NVARCHAR(10)), ', MSG: ', ERROR_MESSAGE())
		;THROW 51002, @MSG, 1;
		RETURN
	END CATCH
	END
	IF @FLAG='I'----FOR SAVE	
	BEGIN
	BEGIN TRY
		BEGIN TRAN
			INSERT INTO Products(NAME,ORIGINALPRICE,SellPrice,Discount,MeasurementTypeID,MeasurementTypeQuantity
			,KeyFeatures,Icon,ExpiryDate,Descriptions,CreatedBy,CategoryID, Active)
			VALUES (@NAME,@ORIGINALPRICE,@SELLPRICE,@DISCOUNTPRICE,@MEASUREMENTID,@MeasurementTypeQuantity,@KEYFEATURES,
			@ICON,@EXPIRYDATE,@DESCRIPTION,@UserID,@CATEGORY, @ISACTIVE)
		COMMIT TRAN
		SELECT  'RECORD SAVED SUCCESSFULLY.' MSG
	END TRY
	BEGIN CATCH
		ROLLBACK TRAN 
		SET @MSG= CONCAT('Log Line: ', CAST(SCOPE_IDENTITY() AS NVARCHAR(10)), ', Error Line: ' , CAST(ERROR_LINE() AS NVARCHAR(10)), ', MSG: ', ERROR_MESSAGE())
		;THROW 51002, @MSG, 1;
		RETURN
	END CATCH
	END
	IF @FLAG='E'----FOR EDIT
	BEGIN
		SELECT P.ID,P.NAME,P.ORIGINALPRICE,P.SellPrice,P.Discount,P.MeasurementTypeID,P.MeasurementTypeQuantity,
			P.KeyFeatures,P.Icon, CONVERT(NVARCHAR, P.ExpiryDate, 103) ExpiryDate,P.Descriptions,P.CreatedDate,P.CreatedBy,P.CategoryID, P.Active
		FROM Products P WITH(NOLOCK)
		Where ID=@ID
	END
END
